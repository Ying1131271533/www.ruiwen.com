<?php

// 发布确认 - 高级 备用交换机 这个老师没做
namespace app\common\command;

use app\common\lib\classes\rabbitmq\RabbitMqConnection;
use think\console\Command;
use think\console\Input;
use think\console\Output;
use think\facade\Log;

class ConfirmBackup extends Command
{
    protected function configure()
    {
        parent::configure(); // TODO: Change the autogenerated stub
        $this->setName('confirm_backup');
    }

    protected function execute(Input $input, Output $output)
    {
        // 弹幕：此处就是测试 交换机无法路由到队列 而转发给备份交换机的过程，正常情况用于备份数据的交换机肯定在备份服务器，这样测试不满意的话可以自己搭建集群测试。
        // 获取连接
        $connection = RabbitMqConnection::getConnection();
        // 获取消息通道
        $channel = $connection->channel();

        // 备份交换姬名称
        $backup_exchange = 'backup_exchange';
        // 备份队列名称
        $backup_queue = 'backup_queue';

        // 声明交换姬
        $channel->exchange_declare($backup_exchange, 'fanout', false, true, false);
        // 声明队列
        $channel->queue_declare($backup_queue, false, true, false, false);
        // 将交换姬和队列进行绑定
        $channel->queue_bind($backup_queue, $backup_exchange);

        echo "[*] Waiting for logs. To exit press CTRL+C \n";
        // 回调
        $callback = function ($msg) {
            $log = "备用消费者收到消息 交换机: {$msg->getExchange()} 路由键: {$msg->getRoutingKey()} 消息: {$msg->getBody()}";
            echo $log.PHP_EOL;
            // dump($msg);
            $msg->ack();
            Log::info($log);
        };

        // 消费消息
        $channel->basic_consume($backup_queue, '', false, false, false, false, $callback);

        // 监听消息
        while ($channel->is_open()) {
            $channel->wait();
        }

        // 关闭连接
        RabbitMqConnection::closeConnectionAndChannel($channel, $connection);
    }

}
