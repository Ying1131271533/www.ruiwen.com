<?php
/**
 * 接收(工作队列)
 * @param $callback
 */
 
namespace app\common\command;

use app\common\lib\classes\rabbitmq\RabbitMqWork;
use think\console\Command;
use think\console\Input;
use think\console\Output;
 
class WorkQueue extends Command
{
    protected function configure()
    {
        parent::configure(); // TODO: Change the autogenerated stub
        $this->setName('workQueue');
    }
 
    protected function execute(Input $input, Output $output)
    {
        $RabbitMqWork = new RabbitMqWork();
        $callback = function ($msg){
            echo "[x] 消费者-1：", $msg->body, "\n";
            // echo "[x] 消费者-2： ", $msg->body, "\n";
            // echo "[x] Received ", $msg->body, "\n";
            $isAck = true;
            // sleep(substr_count($msg->body, '.'));
            sleep(1);
            // sleep(5);
            echo "[x] Done", "\n";
            // 如果有业务需求，就使用下面的手动消息确认，不需要在basic_consume的自动确认no_ack赋值为true
            // 还没有确认的，再次开启basic_ack()，竟然会把之前拿到了还没消费的消息，自动确认了
            if ($isAck) {
                $msg->delivery_info['channel']->basic_ack($msg->delivery_info['delivery_tag']);
            }
        };
        $RabbitMqWork->workTask($callback);
    }
}