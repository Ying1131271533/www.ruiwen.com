<?php

// Shovel
namespace app\common\command\rabbtimq;

use app\common\lib\classes\rabbitmq\RabbitMqConnection;
use think\console\Command;
use think\console\Input;
use think\console\Output;
use think\facade\Log;

class Shovel extends Command
{
    protected function configure()
    {
        parent::configure(); // TODO: Change the autogenerated stub
        $this->setName('shovel');
    }

    protected function execute(Input $input, Output $output)
    {
        // 获取连接
        $connection = RabbitMqConnection::getConnection(['host' => '192.168.159.128']);

        // 获取连接中通道
        $channel = $connection->channel();

        // shovel交换机名称
        $shovel_exchange = 'shovel_exchange';
        // shovel Q1队列名称
        $queue = 'Q1';
        // 路由键
        $routing_key = 'shovel_routing_key';
        
        // 声明Federation交换机
        $channel->exchange_declare($shovel_exchange, 'direct', false, true, false);
        // 声明队列
        $channel->queue_declare($queue, false, true, false, false);
        // 将交换机和队列进行绑定，并且指定路由键
        $channel->queue_bind($queue, $shovel_exchange, $routing_key);
        
        echo ' [*] Waiting for messages. To exit press Ctrl+C', "\n";

        // 回调函数
        $callback = function ($msg) {
            echo "[x]  shovel Q1队列消费者：", $msg->body, "\n";
            $msg->ack();            
        };

        // 消费信息
        $channel->basic_consume($queue, '', false, false, false, false, $callback);

        // 监听通道消息，这里没有的话，消费完消息就会自动退出
        while (count($channel->callbacks)) {
            $channel->wait();
        }

        // 关闭连接
        RabbitMqConnection::closeConnectionAndChannel($connection, $channel);
    }

}
