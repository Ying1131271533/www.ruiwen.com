<?php

// 优先级队列
namespace app\common\command;

use app\common\lib\classes\rabbitmq\RabbitMqConnection;
use PhpAmqpLib\Wire\AMQPTable;
use think\console\Command;
use think\console\Input;
use think\console\Output;
use think\facade\Log;

class PriorityQueue extends Command
{
    protected function configure()
    {
        parent::configure(); // TODO: Change the autogenerated stub
        $this->setName('priority_queue');
    }

    protected function execute(Input $input, Output $output)
    {
        // 获取连接对象
        $connection = RabbitMqConnection::getConnection();
        // 获取通道
        $channel = $connection->channel();

        // 优先级队列名称
        $priority_queue = 'priority_queue';

         // 设置队列的优先级参数，优先级最大为10
        $arguments = new AMQPTable(['x-max-priority' => 10]);
        // 声明队列
        $channel->queue_declare($priority_queue, false, true, false, false, false, $arguments);
        
        echo "[*] Waiting for logs. To exit press CTRL+C \n";
        // 回调
        $callback = function($msg){
            $log = '优先级队列消费者: '. $msg->body;
            echo $log . PHP_EOL;
            $msg->ack();
            Log::info($log);
        };

        // 设置每次只能处理一条,避免消息堆积,从而导致队列挂掉
        $channel->basic_qos(null, 1, null);

        // 开启消费
        $channel->basic_consume($priority_queue, '', false, false, false, false, $callback);

        // 监听
        while($channel->is_open()){
            $channel->wait();
        }

        // 关闭连接
        RabbitMqConnection::closeConnectionAndChannel($channel, $connection);
    }

}
