<?php

// MySQL服务端
// 需要先创建数据库swoole，再创建test表，插入一条数据：id=1 test=阿卡丽
namespace app\common\command\swoole;

use function \Swoole\Coroutine\run;
use think\console\Command;
use think\console\Input;
use think\console\Output;
use think\db\Where;
use think\facade\Log;
use \Swoole\Coroutine;
use \Swoole\Runtime;

class MySQL extends Command
{
    protected function configure()
    {
        parent::configure(); // TODO: Change the autogenerated stub
        $this->setName('mysql');
    }

    protected function execute(Input $input, Output $output)
    {
        // 此行代码后，文件操作，sleep，Mysqli，PDO，streams等都变成异步IO，见'一键协程化'章节
        Runtime::enableCoroutine();
        $s = microtime(true);

        run(function () {
            // up测试结果：下面两个for是同时运行的，第二个for不会等第一个for运行完毕，再运行，加快了程序
            for ($c = 50; $c--;) {
                Coroutine::create(function () {
                    $pdo       = new \PDO('mysql:host=mysql;dbname=swoole;charset=utf8', 'root', 'Hw]al^049cAa83K4sK/3@n.bd');
                    $statement = $pdo->prepare('SELECT `id` FROM `test` where id = 1');
                    for ($n = 100; $n--;) {
                        $statement->execute();
                        $res = $statement->fetch();
                        var_dump('a：' . $res['test']);
                    }
                });
            }

            for ($c = 50; $c--;) {
                Coroutine::create(function () {
                    $mysqli = mysqli_connect('mysql', 'root', 'Hw]al^049cAa83K4sK/3@n.bd', 'swoole');
                    for ($n = 100; $n--;) {
                        $temp = mysqli_query($mysqli, 'SELECT `id` FROM `test` where id = 1');
                        $res  = mysqli_fetch_array($temp);
                        var_dump('b：' . $res['test']);
                    }
                });
            }
        });

        echo '用时：' . (microtime(true) - $s) . ' s' . PHP_EOL;
    }

}
